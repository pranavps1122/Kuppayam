<!DOCTYPE html>
<html>
<head>
    <title>Update Images</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" />
    <style>
        .image-form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .image-preview {
            width: 200px;
            height: 200px;
            object-fit: cover;
            margin: 10px 0;
            border: 1px solid #ddd;
        }
        .image-container {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #eee;
            border-radius: 8px;
        }
        .preview-box {
            text-align: center;
        }
        .submit-btn {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            margin-top: 20px;
        }
        .submit-btn:hover {
            background-color: #45a049;
        }
        .file-input-container {
            margin-top: 15px;
        }
        #crop-modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 999;
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            max-width: 90%;
            width: 800px;
            height: auto;
            border-radius: 8px;
        }
        #crop-modal img {
            max-width: 300%;
            max-height: 400px;
        }
        #crop-buttons {
            margin-top: 15px;
            text-align: center;
        }
        #crop-buttons button {
            margin: 5px;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        #crop-buttons .crop-btn {
            background-color: #4CAF50;
            color: white;
        }
        #crop-buttons .cancel-btn {
            background-color: #f44336;
            color: white;
        }
        #overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 998;
        }
        .image-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            padding: 20px;
        }
        .image-container {
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
        }
        .product-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            margin-bottom: 10px;
            border-radius: 4px;
        }
        .file-input {
            margin: 10px 0;
        }
        .update-btn {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .update-btn:hover {
            background-color: #2980b9;
        }
        .crop-btn, .cancel-btn {
            padding: 10px 20px;
            margin: 0 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        .crop-btn {
            background-color: #4CAF50;
            color: white;
        }
        .crop-btn:hover {
            background-color: #45a049;
        }
        .cancel-btn {
            background-color: #f44336;
            color: white;
        }
        .cancel-btn:hover {
            background-color: #da190b;
        }
        .image-preview {
            margin: 10px auto;
            border: 2px solid #ddd;
            border-radius: 4px;
            overflow: hidden;
        }
        .file-input {
            display: block;
            width: 100%;
            padding: 8px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .file-input:focus {
            outline: none;
            border-color: #4CAF50;
        }
    </style>
</head>
<body>
    <div class="image-form">
        <h2>Update Images</h2>
        <div class="image-grid">
            <% products.productImage.forEach((image, index) => { %>
                <div class="image-container">
                    <img src="/<%= image %>" alt="Product Image <%= index + 1 %>" class="product-image" id="preview<%= index %>">
                    <form action="/admin/updateimages/<%= products._id %>" method="POST" enctype="multipart/form-data">
                        <input type="hidden" name="imageIndex" value="<%= index %>">
                        <input 
                            type="file" 
                            name="images" 
                            accept="image/*" 
                            class="file-input"
                            onchange="openCropModal(this, <%= index %>)"
                        >
                        <button type="submit" class="update-btn">Update This Image</button>
                    </form>
                </div>
            <% }); %>
        </div>
    </div>

    <div id="overlay"></div>
    <div id="crop-modal">
        <h3>Crop Image</h3>
        <div>
            <img id="crop-image" alt="Crop Area">
        </div>
        <div id="crop-buttons">
            <button class="crop-btn" onclick="cropImage()">Done</button>
            <button class="cancel-btn" onclick="closeCropModal()">Cancel</button>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script>
        let cropper;
        let currentInput;
        let currentPreview;
        let currentForm;

        function openCropModal(input, index) {
            currentInput = input;
            currentPreview = document.getElementById('preview' + index);
            currentForm = input.closest('form');

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    const cropModal = document.getElementById('crop-modal');
                    const cropImage = document.getElementById('crop-image');
                    const overlay = document.getElementById('overlay');

                    cropImage.src = e.target.result;
                    cropModal.style.display = 'block';
                    overlay.style.display = 'block';

                    if (cropper) {
                        cropper.destroy();
                    }

                    cropper = new Cropper(cropImage, {
                        aspectRatio: 3/4,
                        viewMode: 2,
                        preview: currentPreview,
                        guides: true,
                        movable: true,
                        scalable: true,
                        zoomable: true,
                        crop(event) {
                            console.log('Crop event:', event.detail);
                        }
                    });
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        function cropImage() {
            if (!cropper) return;

            const canvas = cropper.getCroppedCanvas({
                width: 600,
                height: 800
            });

            canvas.toBlob(blob => {
                const file = new File([blob], currentInput.files[0].name, { 
                    type: blob.type,
                    lastModified: new Date().getTime()
                });

                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                currentInput.files = dataTransfer.files;

                const croppedUrl = URL.createObjectURL(blob);
                currentPreview.src = croppedUrl;

                if (currentForm) {
                    currentForm.submit();
                }

                closeCropModal();
            }, currentInput.files[0].type);
        }

        function closeCropModal() {
            const cropModal = document.getElementById('crop-modal');
            const overlay = document.getElementById('overlay');

            cropModal.style.display = 'none';
            overlay.style.display = 'none';

            if (cropper) {
                cropper.destroy();
                cropper = null;
            }

            if (currentInput) {
                currentInput.value = '';
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('overlay').addEventListener('click', closeCropModal);
            document.getElementById('crop-modal').addEventListener('click', function(e) {
                e.stopPropagation();
            });
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    closeCropModal();
                }
            });
        });
    </script>
</body>
</html>
