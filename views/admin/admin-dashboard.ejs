<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Kuppayam</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles/sidebar.css">
    <link rel="stylesheet" href="/styles/admin.css">
    <style>
        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            overflow: scroll;
        }

        .logo {
            font-size: 24px;
            font-weight: bold;
            color: white;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .search-bar input {
            width: 300px;
            padding: 8px;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            margin-bottom: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 30px;
            background-color: #1f1f1f;
            color: white;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }
        .logout-btn {
            padding: 10px 20px;
            background-color: #e74c3c;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            font-size: 16px;
            font-weight: bold;
            transition: background-color 0.3s;
            margin-right: 40px;
        }
        .logout-btn:hover {
            background-color: #c0392b;
        }
        .content-card{
            width: 1150px;
        }
        .footer{
            width: 1520px;
        }
        .main-container {
            max-width: 800px; /* Standardized width */
            margin: 0 auto; /* Centering */
            padding: 20px; /* Consistent padding */
            background: white; /* Background for uniformity */
            border-radius: 8px; /* Rounded corners */
            box-shadow: 0 1px 3px rgba(0,0,0,0.1); /* Subtle shadow */
        }
        .btn-primary {
            background-color: #3498db; /* Standard primary button color */
            color: white;
        }
        .btn-secondary {
            background-color: #e9ecef; /* Standard secondary button color */
            color: #2d3436;
        }
        .bg-gray-50 {
    background-color: #f9fafb;
}

.card {
    background-color: white;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    overflow: hidden;
}

.card-header {
    padding: 16px;
    border-bottom: 1px solid #f1f5f9;
}

.card-content {
    padding: 16px;
}

.text-sm {
    font-size: 0.875rem;
}

.text-gray-500 {
    color: #6b7280;
}

.text-green-500 {
    color: #10b981;
}

.text-red-500 {
    color: #ef4444;
}

.flex {
    display: flex;
}

.items-center {
    align-items: center;
}

.justify-between {
    justify-content: space-between;
}

.grid {
    display: grid;
}

.grid-cols-1 {
    grid-template-columns: 1fr;
}

.md\\:grid-cols-3 {
    grid-template-columns: repeat(3, 1fr);
}

.gap-6 {
    gap: 24px;
}

.w-8 {
    width: 2rem;
}

.h-8 {
    height: 2rem;
}

.rounded-full {
    border-radius: 50%;
}

.bg-blue-100 {
    background-color: #ebf8ff;
}

.text-blue-600 {
    color: #3182ce;
}

.p-6 {
    padding: 24px;
}

.hover\\:shadow-lg:hover {
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
}

.transition-shadow {
    transition: box-shadow 0.3s;
}

.icon-trending-up,
.icon-shopping-bag,
.icon-package {
    font-size: 24px;
}

.tabs {
    display: flex;
}

.tab {
    background-color: #f1f5f9;
    padding: 8px 16px;
    border-radius: 4px;
    margin-right: 8px;
    cursor: pointer;
}

.tab:hover {
    background-color: #e2e8f0;
}

.card-header h2 {
    font-size: 1.25rem;
    font-weight: 600;
}

.card-content .chart-container {
    max-width: 100%;
}
.main-Content{
    width: 1200px;
    margin-left: 300px;
    height: 75vh;
}
.tab.active {
    background-color: #EBF5FF;
    color: #3B82F6;
}

.chart-container {
    position: relative;
    margin: auto;
    height: 400px;
    width: 100%;
}

.card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.card-header {
    border-bottom: 1px solid #f0f0f0;
}

.bg-gray-50 {
    background-color: #F9FAFB;
}

/* Hover effects */
.tab:hover {
    background-color: #EBF5FF;
    color: #3B82F6;
}

/* Transition effects */
.tab {
    transition: all 0.2s ease-in-out;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .grid-cols-3 {
        grid-template-columns: 1fr;
    }
    
    .grid-cols-2 {
        grid-template-columns: 1fr;
    }
}
    </style>
</head>
<body>
    <header class="header">
        <div class="logo">Admin Dashboard</div>
        <a href="/admin/logout" class="logout-btn">Logout</a>
    </header>
    <%- include('./partials/sidebar', { admin, active: 'dashboard' }) %>



    <main class="main-Content">
        <div class="page-header">
            <h2 class="page-title">Admin Dashboard</h2>
        </div>

        <div class="dashboard-content">
            <h3>Welcome to the Admin Dashboard</h3>
            <p>Here you can manage all aspects of the application.</p>
           

    <div class="space-y-6">

  
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          
            <div class="card bg-white hover:shadow-lg">
                <div class="card-content p-6">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-sm text-gray-500"> Total Revenue</p>
                            <h3 class="text-2xl font-bold mt-2" id="totalRevenue">₹82,000</h3>
                          
                            <div class="flex items-center mt-2 text-green-500">
                                <span>↑</span>
                                <span class="ml-1 text-sm">12.5%</span>
                            </div>
                        </div>
                        <div class="p-3 rounded-lg bg-blue-50">
                            <i class="icon-trending-up text-blue-500"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Total Orders Card -->
            <div class="card bg-white hover:shadow-lg">
                <div class="card-content p-6">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-sm text-gray-500">Total Orders</p>
                            <h3 class="text-2xl font-bold mt-2" id="totalOrders">990</h3>
                            <div class="flex items-center mt-2 text-green-500">
                                <span>↑</span>
                                <span class="ml-1 text-sm">8.2%</span>
                            </div>
                        </div>
                        <div class="p-3 rounded-lg bg-blue-50">
                            <i class="icon-shopping-bag text-blue-500"></i>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card bg-white hover:shadow-lg">
                <div class="card-content p-6">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-sm text-gray-500">Total Products</p>
                            <h3 class="text-2xl font-bold mt-2" id="totalProducts">1,250</h3>
                            <div class="flex items-center mt-2 text-red-500">
                                <span>↓</span>
                                <span class="ml-1 text-sm">3.1%</span>
                            </div>
                        </div>
                        <div class="p-3 rounded-lg bg-blue-50">
                            <i class="icon-package text-blue-500"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       
        <div class="card bg-white">
            <div class="card-header flex justify-between items-center p-6 border-b">
                <div>
                    <h2 class="text-xl font-semibold text-gray-800">Revenue Overview</h2>
                    <p class="text-sm text-gray-500 mt-1">Monthly revenue performance</p>
                </div>
                <div class="flex space-x-2">
                    <button class="tab active px-4 py-2 text-sm font-medium rounded-md transition-colors duration-150" 
                        data-range="yearly">
                        Yearly
                    </button>
                    <button class="tab px-4 py-2 text-sm font-medium rounded-md transition-colors duration-150" 
                        data-range="monthly">
                        Monthly
                    </button>
                    <button class="tab px-4 py-2 text-sm font-medium rounded-md transition-colors duration-150" 
                        data-range="weekly">
                        Weekly
                    </button>
                </div>
            </div>
            <div class="card-content p-6">
                <div class="relative" style="height: 400px;">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>

       
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
           
            <div class="card bg-white">
                <div class="card-header">
                    <h2>Top Selling Products</h2>
                </div>
                <div class="card-content">
                    <div class="space-y-4">
                        <% topProducts.forEach((product, index) => { %>
                            <div class="product-item flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg">
                                <div class="flex items-center">
                                    <span class="w-8 h-8 flex items-center justify-center bg-blue-100 text-blue-600 rounded-full mr-3">
                                        <%= index + 1 %>
                                    </span>
                                    <div>
                                        <p class="font-medium"><%= product.productName%></p>
                                        <p class="text-sm text-gray-500"><%= product.sales %> sales</p>
                                    </div>
                                </div>
                                <div class="<%= product.growth > 0 ? 'text-green-500' : 'text-red-500' %>">
                                    <span><%= product.growth > 0 ? '↑' : '↓' %></span>
                                    <span class="ml-1"><%= Math.abs(product.growth) %>%</span>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>

            <!-- Best Selling Categories -->
            <div class="card bg-white mt-6">
                <div class="card-header p-6 border-b">
                    <h2 class="text-xl font-semibold text-gray-800">Best Selling Categories</h2>
                    <p class="text-sm text-gray-500 mt-1">Top 10 categories by sales volume</p>
                </div>
                <div class="card-content p-6">
                    <div class="overflow-x-auto">
                        <table class="min-w-full">
                            <thead>
                                <tr class="bg-gray-50">
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rank</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total Sales</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Revenue</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200" id="topCategoriesList">
                                <% topCategories.slice(0, 10).forEach((category, index) => { %>
                                    <tr class="hover:bg-gray-50 transition-colors">
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="w-8 h-8 flex items-center justify-center bg-blue-100 text-blue-600 rounded-full font-semibold">
                                                <%= index + 1 %>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="text-sm font-medium text-gray-900"><%= category.name %></div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="text-sm text-gray-900"><%= category.totalSales %></div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="text-sm text-gray-900">₹<%= category.revenue.toFixed(2) %></div>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>

        </div>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
document.addEventListener("DOMContentLoaded", function() {
    console.log("Page loaded, initializing dashboard...");
    updateDashboard();
});

async function updateDashboard(timeRange = 'yearly') {
    try {
        console.log("Fetching dashboard data...");
        const response = await fetch(`/admin/dashboard-stats?timeRange=${timeRange}`, {
            headers: {
                'Accept': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        console.log("Received dashboard data:", data);

        // Update stats cards
        if (document.getElementById('totalRevenue')) {
            document.getElementById('totalRevenue').textContent = 
                `₹${((data.totalRevenue || 0)).toFixed(2)}`;
        }
        if (document.getElementById('totalOrders')) {
            document.getElementById('totalOrders').textContent = data.totalOrders || 0;
        }
        if (document.getElementById('totalProducts')) {
            document.getElementById('totalProducts').textContent = data.totalProducts || 0;
        }

        // Update charts
        if (data.salesData && typeof data.salesData === 'object') {
            updateRevenueChart(data.salesData);
        }
        if (data.categoryData && typeof data.categoryData === 'object') {
            updateCategoryChart(data.categoryData);
        }

        // Update top products
        const topProductsContainer = document.querySelector('.space-y-4');
        if (topProductsContainer && data.topProducts && Array.isArray(data.topProducts)) {
            const topProductsHTML = data.topProducts.map((product, index) => `
                <div class="product-item flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg">
                    <div class="flex items-center">
                        <span class="w-8 h-8 flex items-center justify-center bg-blue-100 text-blue-600 rounded-full mr-3">
                            ${index + 1}
                        </span>
                        <div>
                            <p class="font-medium">${product.productName || 'Unknown Product'}</p>
                            <p class="text-sm text-gray-500">${product.totalSales || 0} sales</p>
                        </div>
                    </div>
                    <div class="text-green-500">
                        ₹${(product.revenue || 0).toFixed(2)}
                    </div>
                </div>
            `).join('');
            
            topProductsContainer.innerHTML = topProductsHTML || '<p class="text-gray-500">No products data available</p>';
        }

        // Update categories table
        updateTopCategories(data);

    } catch (error) {
        console.error('Error updating dashboard:', error);
        const errorMessage = document.createElement('div');
        errorMessage.className = 'error-message p-4 bg-red-100 text-red-700 rounded-lg mt-4';
        errorMessage.textContent = `Error: ${error.message}. Please try refreshing the page or contact support.`;
        
        const mainContent = document.querySelector('.dashboard-content');
        if (mainContent) {
            mainContent.insertBefore(errorMessage, mainContent.firstChild);
        }
    }
}

function setTimeRange(range) {
    updateDashboard(range);
}

// Function to update Revenue Chart
function updateRevenueChart(salesData) {
    try {
        const ctx = document.getElementById("revenueChart");
        if (!ctx) {
            console.error('Revenue chart canvas element not found');
            return;
        }

        // Destroy existing chart if it exists
        if (window.revenueChart instanceof Chart) {
            window.revenueChart.destroy();
        }

        // Create gradient
        const gradient = ctx.getContext('2d').createLinearGradient(0, 0, 0, 400);
        gradient.addColorStop(0, 'rgba(59, 130, 246, 0.2)');
        gradient.addColorStop(1, 'rgba(59, 130, 246, 0)');

        // Create new chart
        window.revenueChart = new Chart(ctx, {
            type: "line",
            data: {
                labels: salesData.labels || [],
                datasets: [
                    {
                        label: "Revenue",
                        data: salesData.values || [],
                        borderColor: "#3B82F6",
                        backgroundColor: gradient,
                        fill: true,
                        tension: 0.4,
                        borderWidth: 2,
                        pointBackgroundColor: "#3B82F6",
                        pointBorderColor: "#FFFFFF",
                        pointBorderWidth: 2,
                        pointRadius: 4,
                        pointHoverRadius: 6,
                    }
                ],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            drawBorder: false,
                            color: "rgba(0, 0, 0, 0.05)",
                        },
                        ticks: {
                            callback: function(value) {
                                return '₹' + value.toLocaleString();
                            },
                            font: {
                                size: 12
                            }
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            font: {
                                size: 12
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        backgroundColor: 'rgba(255, 255, 255, 0.9)',
                        titleColor: '#000',
                        bodyColor: '#666',
                        bodyFont: {
                            size: 12
                        },
                        titleFont: {
                            size: 13,
                            weight: 'bold'
                        },
                        padding: 12,
                        borderColor: 'rgba(0, 0, 0, 0.1)',
                        borderWidth: 1,
                        displayColors: false,
                        callbacks: {
                            label: function(context) {
                                return 'Revenue: ₹' + context.parsed.y.toLocaleString();
                            }
                        }
                    }
                }
            }
        });
    } catch (error) {
        console.error('Error updating revenue chart:', error);
    }
}

// Function to update Category Chart
function updateCategoryChart(categoryData) {
    try {
        const ctx = document.getElementById("categoryChart");
        if (!ctx) {
            console.error('Category chart canvas element not found');
            return;
        }

        // Destroy existing chart if it exists
        if (window.categoryChart instanceof Chart) {
            window.categoryChart.destroy();
        }

        // Create new chart
        window.categoryChart = new Chart(ctx, {
            type: "doughnut",
            data: {
                labels: categoryData.labels || [],
                datasets: [{
                    data: categoryData.values || [],
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4CAF50",
                        "#9C27B0",
                        "#FF9800"
                    ],
                }],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right',
                    }
                }
            }
        });
    } catch (error) {
        console.error('Error updating category chart:', error);
    }
}

// Add active class to tabs and handle time range changes
document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', function() {
        document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
        this.classList.add('active');
        const timeRange = this.getAttribute('data-range');
        updateDashboard(timeRange);
    });
});

function updateTopCategories(data) {
    const topCategoriesList = document.getElementById('topCategoriesList');
    if (topCategoriesList && data.topCategories) {
        const categoriesHTML = data.topCategories.slice(0, 10).map((category, index) => `
            <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-4 whitespace-nowrap">
                    <div class="w-8 h-8 flex items-center justify-center bg-blue-100 text-blue-600 rounded-full font-semibold">
                        ${index + 1}
                    </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm font-medium text-gray-900">${category.name}</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">${category.totalSales}</div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">₹${category.revenue.toFixed(2)}</div>
                </td>
            </tr>
        `).join('');
        topCategoriesList.innerHTML = categoriesHTML;
    }
}

    </script>
    
</body>
</html>