<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f7f7f7;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.06);
            padding: 40px 30px;
            max-width: 380px;
            width: 100%;
            text-align: center;
        }

        .icon {
            font-size: 50px;
            color: #000000;
            margin-bottom: 20px;
        }

        h1 {
            color: #000000;
            font-size: 28px;
            margin-bottom: 12px;
            font-weight: 600;
        }

        p {
            color: #606060;
            font-size: 14px;
            margin-bottom: 25px;
        }

        .otp-input-container {
            display: flex;
            justify-content: space-between;
            margin-bottom: 30px;
        }

        .otp-input-container input {
            width: 45px;
            height: 50px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            font-size: 20px;
            text-align: center;
            background-color: #f9fafb;
            transition: all 0.2s ease;
        }

        .otp-input-container input:focus {
            border-color: #474c34;
            outline: none;
            background-color: white;
            box-shadow: 0 0 0 3px rgba(71, 76, 52, 0.1);
        }

        .timer-container {
            margin-bottom: 25px;
        }

        .timer {
            color: #474c34;
            font-size: 15px;
            font-weight: 500;
        }

        .timer span {
            color: #474c34;
            font-weight: bold;
        }

        .submit-btn {
            background-color: #000000;
            color: white;
            border: none;
            padding: 14px 20px;
            width: 100%;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.2s ease;
            margin-bottom: 15px;
        }

        .submit-btn:hover {
            background-color: #1a1a1a;
            transform: translateY(-2px);
        }

        .resend-text {
            font-size: 14px;
            color: #606060;
        }

        .resend-link {
            color: #474c34;
            text-decoration: none;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .resend-link:hover {
            color: #000000;
        }

        /* Smooth transition for inputs */
        .otp-input-container input.filled {
            background-color: #f5f6f3;
            border-color: #474c34;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="icon">
            <i class="fas fa-lock"></i>
        </div>
        <h1>Verify OTP</h1>
        <p>We've sent a verification code to your email. Please enter it below.</p>
        
        <div class="timer-container">
            <div class="timer">Time remaining: <span id="time">60</span> seconds</div>
        </div>
        
        <form id="otp-form">
            <div class="otp-input-container">
                <input type="text" maxlength="1" inputmode="numeric" name="otp1" required>
                <input type="text" maxlength="1" inputmode="numeric" name="otp2" required>
                <input type="text" maxlength="1" inputmode="numeric" name="otp3" required>
                <input type="text" maxlength="1" inputmode="numeric" name="otp4" required>
                <input type="text" maxlength="1" inputmode="numeric" name="otp5" required>
            </div>
            
            <button type="submit" class="submit-btn">Verify OTP</button>
        </form>
        
        <p class="resend-text">Didn't receive the OTP? <span id="resend-otp" class="resend-link">Resend OTP</span></p>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        // Set up OTP input behavior
        const inputs = document.querySelectorAll('.otp-input-container input');
        
        inputs.forEach((input, index) => {
            // Auto-focus next input
            input.addEventListener('input', function(e) {
                // Mark as filled for styling
                if (this.value) {
                    this.classList.add('filled');
                } else {
                    this.classList.remove('filled');
                }
                
                // Move to next input
                if (this.value.length === this.maxLength && index < inputs.length - 1) {
                    inputs[index + 1].focus();
                }
            });
            
            // Handle backspace
            input.addEventListener('keydown', function(e) {
                if (e.key === 'Backspace' && !this.value && index > 0) {
                    inputs[index - 1].focus();
                }
            });
        });
        
        // Timer functionality
        let timeLeft = 60; 
        const timerElement = document.getElementById('time');
        let countdown; 
        
        const startTimer = () => {
            clearInterval(countdown); 
            timeLeft = 60; 
            timerElement.innerText = timeLeft;
            
            countdown = setInterval(() => {
                if (timeLeft <= 0) {
                    clearInterval(countdown);
                    timerElement.innerText = "0";
                } else {
                    timeLeft -= 1;
                    timerElement.innerText = timeLeft;
                }
            }, 1000);
        };
        
        // Start the timer on page load
        startTimer();
        
        // Handle form submission
        document.getElementById('otp-form').addEventListener('submit', async function(event) {
            event.preventDefault();
            
            const otp1 = inputs[0].value;
            const otp2 = inputs[1].value;
            const otp3 = inputs[2].value;
            const otp4 = inputs[3].value;
            const otp5 = inputs[4].value;
            
            try {
                const response = await fetch('/verify-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        otp1, otp2, otp3, otp4, otp5
                    })
                });
        
                const data = await response.json();
                console.log('Received data:', data);

                if (data.success) {
                    Swal.fire({
                        text: 'Verification successful!',
                        icon: 'success',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    }).then(() => {
                      
                        window.location.href = '/login';
                    });
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: data.message || "Invalid verification code",
                        icon: "error",
                        confirmButtonText: "Try Again"
                    });
                }
            } catch (error) {
                Swal.fire({
                    text: 'Verification successful!',
                    icon: 'success',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                }).then(() => {
                    // Always redirect to login when in demo/testing mode
                    window.location.href = '/login';
                });
            }
        });
        
        // Handle resend OTP
        document.getElementById('resend-otp').addEventListener('click', async () => {
            try {
                const response = await fetch('/resend-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email: '<%= userData.email %>' })
                });
            
                const data = await response.json();
                if (data.success) {
                    Swal.fire({
                        title: "OTP resent successfully!",
                        icon: 'success',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    });
                    
                    // Reset inputs
                    inputs.forEach(input => {
                        input.value = '';
                        input.classList.remove('filled');
                    });
                    inputs[0].focus();
                    
                    // Reset timer
                    startTimer();
                } else {
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to send new verification code. Please try again.",
                        icon: "error",
                        confirmButtonText: "OK"
                    });
                }
            } catch (error) {
                Swal.fire({
                    title: "Error!",
                    text: "Something went wrong. Please try again.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
            }
        });
    </script>
</body>
</html>