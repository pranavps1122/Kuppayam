<%- include('../partials/user/header') %>
<%- include('../partials/user/sidebar-styles') %>

<style>
    /* Modern color palette and variables */
    :root {
        --primary-color: #4f46e5;
        --primary-light: #c7d2fe;
        --primary-dark: #3730a3;
        --accent-color: #f59e0b;
        --text-dark: #1e293b;
        --text-medium: #64748b;
        --text-light: #94a3b8;
        --bg-light: #f8fafc;
        --border-color: #e2e8f0;
        --success: #10b981;
        --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
        --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.07);
        --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);
        --radius-sm: 6px;
        --radius-md: 8px;
        --radius-lg: 12px;
        --transition: all 0.3s ease;
    }

    /* Page title styling */
    .page-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--text-dark);
        margin-bottom: 1.5rem;
        position: relative;
        display: inline-block;
    }
    
    .page-title::after {
        content: '';
        position: absolute;
        bottom: -8px;
        left: 0;
        width: 60px;
        height: 4px;
        background: linear-gradient(90deg, var(--primary-color), var(--primary-light));
        border-radius: 2px;
    }

    /* Orders container styling */
    .orders-container {
        background: white;
        padding: 2rem;
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow-md);
        position: relative;
        overflow: hidden;
        
    }
    
    .orders-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        background: linear-gradient(90deg, var(--primary-color), var(--primary-dark));
    }

    /* Order card styling */
    .order-card {
        border: 1px solid var(--border-color);
        border-radius: var(--radius-md);
        padding: 1.25rem;
        margin-bottom: 1.5rem;
        background: white;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow-sm);
    }
    
    .order-card:hover {
        box-shadow: var(--shadow-md);
        transform: translateY(-2px);
    }
    
    .order-card::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 6px;
        height: 100%;
        background: linear-gradient(180deg, var(--primary-color), var(--primary-light));
        opacity: 0.7;
    }

    svg {
        width: 100% !important;
    }

    /* Table styling */
    .item-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        margin: 0.5rem 0;
        font-size: 0.95rem;
    }

    .item-table th,
    .item-table td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid var(--border-color);
    }

    .item-table th {
        background-color: var(--bg-light);
        font-weight: 600;
        color: var(--text-medium);
        position: relative;
    }
    
    .item-table th:first-child {
        border-top-left-radius: var(--radius-sm);
    }
    
    .item-table th:last-child {
        border-top-right-radius: var(--radius-sm);
    }
    
    .item-table tr:last-child td {
        border-bottom: none;
    }
    
    .item-table tr:hover td {
        background-color: rgba(79, 70, 229, 0.03);
    }

    /* Order ID styling */
    .order-id {
        font-family: monospace;
        font-weight: 500;
        color: var(--primary-dark);
        background-color: var(--primary-light);
        padding: 0.3rem 0.6rem;
        border-radius: 4px;
        display: inline-block;
    }

    /* Date styling */
    .order-date {
        display: flex;
        align-items: center;
        color: var(--text-medium);
    }
    
    .order-date i {
        margin-right: 6px;
        font-size: 0.9rem;
    }

    /* Total amount styling */
    .order-total {
        text-align: right;
        font-weight: 600;
        color: var(--text-dark);
        margin-top: 1rem;
        font-size: 1.1rem;
        padding: 0.8rem 1.2rem;
        background-color: var(--bg-light);
        border-radius: var(--radius-sm);
        display: inline-block;
        float: right;
    }
    
    .order-total::before {
        content: 'â‚¹';
        margin-right: 2px;
        color: var(--accent-color);
    }

    /* Action buttons styling */
    .cancel-btn {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        padding: 0.5rem 1rem;
        border-radius: var(--radius-sm);
        font-size: 0.9rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: var(--transition);
        border: none;
        box-shadow: 0 2px 4px rgba(79, 70, 229, 0.25);
        cursor: pointer;
    }
    
    .cancel-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(79, 70, 229, 0.3);
    }
    
    .cancel-btn i {
        margin-right: 8px;
    }

    /* Invoice button styling */
    .invoice {
        background-color: #000000;
        color: white;
        text-decoration: none;
        font-size: 0.85rem;
        padding: 0.5rem 1rem;
        border-radius: var(--radius-sm);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: var(--transition);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
    }
    
    .invoice:hover {
        background-color: #2d3748;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    
    .invoice i {
        margin-right: 6px;
    }

    /* Pagination styling */
    .pagination {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
        margin-top: 2rem;
    }

    .page-link {
        padding: 0.5rem 1rem;
        border: 1px solid var(--border-color);
        border-radius: var(--radius-sm);
        color: var(--text-medium);
        text-decoration: none;
        font-size: 0.9rem;
        transition: var(--transition);
        background-color: white;
    }
    
    .page-link:hover {
        background-color: var(--bg-light);
        color: var(--primary-color);
        border-color: var(--primary-light);
    }

    .page-link.active {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        border-color: var(--primary-dark);
        font-weight: 500;
        box-shadow: 0 2px 4px rgba(79, 70, 229, 0.25);
    }
    
    .page-link.prev, .page-link.next {
        display: flex;
        align-items: center;
    }
    
    .page-link.prev i {
        margin-right: 4px;
    }
    
    .page-link.next i {
        margin-left: 4px;
    }

    /* Empty state styling */
    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
        color: var(--text-medium);
    }
    
    .empty-state i {
        font-size: 3rem;
        color: var(--text-light);
        margin-bottom: 1rem;
        display: block;
    }

    /* Enhanced animation */
    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .page-animation {
        animation: fadeIn 0.6s ease-out forwards;
    }
    
    /* Staggered animation for order cards */
    .order-card:nth-child(1) {
        animation-delay: 0.1s;
    }
    .order-card:nth-child(2) {
        animation-delay: 0.2s;
    }
    .order-card:nth-child(3) {
        animation-delay: 0.3s;
    }
    .order-card:nth-child(4) {
        animation-delay: 0.4s;
    }
    .order-card:nth-child(5) {
        animation-delay: 0.5s;
    }
</style>

<div class="page-container">
    <%- include('../partials/user/sidebar-styles') %>
    <%- include('../partials/user/sidebar', { user: user, active: 'orders' }) %>
    
    <main class="main-content">
        <div class="orders-container page-animation">
            <h1 class="page-title">My Orders</h1>
            <% if (orders && orders.length > 0) { %>
                <% orders.forEach(function(order) { %>
                    <div class="order-card page-animation">
                        <table class="item-table">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Date</th>
                                    <th>Action</th>
                                    <th>Invoice</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><span class="order-id">#<%= order._id %></span></td>
                                    <td>
                                        <span class="order-date">
                                            <i class="fas fa-calendar-alt"></i>
                                            <%= new Date(order.date).toLocaleDateString() %>
                                        </span>
                                    </td>

                                    <td>
                                        <% if (order.paymentMethod === 'Online Payment' && order.paymentStatus === 'pending') { %>
                                            <button onclick="retryPayment('<%= order.razorpayOrderId %>')" class="cancel-btn">
                                                <i class="fas fa-sync-alt"></i> Retry
                                            </button>
                                        <% } else { %>
                                            <a href="/orderstatus/<%= order._id %>" class="cancel-btn">
                                                <i class="fas fa-eye"></i> View
                                            </a>
                                    
                                            <td>
                                            <% let invoiceShown = false; %> <!-- Flag to ensure only one button is shown -->
                                            <% order.orderedItem.forEach(item => { %>
                                                <% if (item.productStatus === 'delivered' && !invoiceShown) { %>
                                                    <a href="/downloadInvoice/<%= order._id %>" class="invoice">
                                                        <i class="fas fa-file-download"></i> Download
                                                    </a>
                                                    <% invoiceShown = true; %> <!-- Set flag to true after showing once -->
                                                <% } %>
                                            <% }) %>
                                        </td>
                                        <% } %>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        
                        <div class="order-total">
                            <%= order.orderAmount.toFixed(2) %>
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                <% }); %>

                <% if (totalPages > 1) { %>
                    <div class="pagination">
                        <% if (currentPage > 1) { %>
                            <a href="?page=<%= currentPage - 1 %>" class="page-link prev">
                                <i class="fas fa-chevron-left"></i> Previous
                            </a>
                        <% } %>
                        
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <a href="?page=<%= i %>" 
                               class="page-link <%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                        <% } %>
                        
                        <% if (currentPage < totalPages) { %>
                            <a href="?page=<%= currentPage + 1 %>" class="page-link next">
                                Next <i class="fas fa-chevron-right"></i>
                            </a>
                        <% } %>
                    </div>
                <% } %>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-shopping-bag"></i>
                    <p>No orders found. Start shopping to see your orders here!</p>
                </div>
            <% } %>
        </div>
    </main>
</div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
    async function retryPayment(orderId) {
        console.log('Retrying payment for Order ID:', orderId);
        try {
            const response = await fetch('/retry-payment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ razorpayOrderId: orderId })
            });

            const data = await response.json();
            console.log('Server Response:', data);

            if (data.success) {
                initializeRazorpay(data.razorpayOrderId, data.amount);
            } else {
                alert('Failed to retry payment. ' + data.error);
            }
        } catch (error) {
            console.error('Error in retryPayment:', error);
            alert('An error occurred while retrying the payment.');
        }
    }

    function initializeRazorpay(orderId, amount) {
        const options = {
            key: '<%= process.env.KEY_ID %>',
            amount: amount * 100, 
            currency: 'INR',
            name: 'Kuppayam',
            description: 'Purchase Payment',
            order_id: orderId,
            handler: function(response) {
                fetch('/verify-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_signature: response.razorpay_signature
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = '/ordersuccess';
                    } else {
                        window.location.href = '/orderDetails';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Payment verification failed. Please try again.');
                });
            },
            prefill: {
                name: '<%= user?.name %>',
                email: '<%= user?.email %>',
            },
            theme: {
                color: '#4f46e5'
            }
        };

        const rzp = new Razorpay(options);
        rzp.open();
    }
</script>
<%- include('../partials/user/footer') %>